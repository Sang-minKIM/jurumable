import { css } from "@emotion/react";
import styled from "@emotion/styled";
import { useEffect, useState } from "react";

const BoardContainer = styled.div`
    display: grid;
    grid-template-columns: repeat(10, 1fr);
    grid-template-rows: repeat(8, 1fr);
    gap: 1px;
    width: 100%;
    height: 100%;
`;

const Cell = styled.div<{ isActive: boolean; bgColor: string }>`
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    word-break: keep-all;
    color: ${({ bgColor }) => (bgColor === "#FAFFAF" ? "black" : "white")};
    background-color: ${({ bgColor }) => bgColor};

    background-color: ${({ isActive, bgColor }) => (isActive ? "#EF5A6F" : bgColor)};
`;

const EmptyCell = styled.div`
    grid-column: 2/ 10;
    grid-row: 2/ 8;
`;

const boardGrid = [
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 31, 10, 30, 11, 29, 12, 28, 13, 27, 14, 26, 15, 25, 24, 23, 22, 21, 20, 19, 18, 17,
    16,
];

const cellData = [
    { content: "Ï∂úÎ∞ú", bgColor: "#FAFFAF" },
    { content: "Ïñë ÏòÜ ÎßàÏÖî!", bgColor: "#96C9F4" },
    { content: "Ïù¥Î¶ÑÏóê '„Öá' Îì§Ïñ¥Í∞ÑÏÇ¨Îûå", bgColor: "#3FA2F6" },
    { content: "Ìï® Î¥êÏ§ÄÎã§", bgColor: "#0F67B1" },
    { content: "Ïò§Î•∏Ï™Ω ÎßàÏÖî!", bgColor: "#96C9F4" },
    { content: "ÎûúÎç§ Í≤åÏûÑ", bgColor: "#3FA2F6" },
    { content: "2Ïûî „Ñ±„Ñ±", bgColor: "#0F67B1" },
    { content: "Ìï® Î¥êÏ§ÄÎã§", bgColor: "#96C9F4" },
    { content: "ÎûúÎç§Í≤åÏûÑ", bgColor: "#3FA2F6" },
    { content: "Ïà† Ï†ÅÎ¶Ω", bgColor: "#FAFFAF" },
    { content: "ÏôºÏ™Ω ÎßàÏÖî", bgColor: "#96C9F4" },
    { content: "ÎûúÎç§Í≤åÏûÑ", bgColor: "#3FA2F6" },
    { content: "Ìï® Î¥êÏ§ÄÎã§", bgColor: "#0F67B1" },
    { content: "Ïû•Ïî® ÎßàÏÖî", bgColor: "#96C9F4" },
    { content: "Îãà Î¨¥Îùº~", bgColor: "#3FA2F6" },
    { content: "2Î™Ö ÏßÄÎ™©", bgColor: "#0F67B1" },
    { content: "ÏÑ∏Í≥ÑÏó¨Ìñâ", bgColor: "#FAFFAF" },
    { content: "Ïñë ÏòÜ ÎßàÏÖî~", bgColor: "#96C9F4" },
    { content: "Ïù¥Î¶Ñ 1Í∏ÄÏûê ÎßàÏÖî", bgColor: "#3FA2F6" },
    { content: "ÎûúÎç§Í≤åÏûÑ", bgColor: "#0F67B1" },
    { content: "Ìï® Î¥êÏ§ÄÎã§", bgColor: "#96C9F4" },
    { content: "Ïö¥Ï†Ñ Ïïà Ìïú ÎÜàÎì§ Î¨¥Îùº", bgColor: "#3FA2F6" },
    { content: "Ìï® Î¥êÏ§ÄÎã§", bgColor: "#0F67B1" },
    { content: "ÎûúÎç§Í≤åÏûÑ", bgColor: "#96C9F4" },
    { content: "ÏôºÏ™Ω ÎßàÏÖî", bgColor: "#3FA2F6" },
    { content: "Ïà† Ï†ÄÏû•Í≥†:", bgColor: "#FAFFAF" },
    { content: "ÎûúÎç§Í≤åÏûÑ", bgColor: "#0F67B1" },
    { content: "Ìï® Î¥êÏ§ÄÎã§", bgColor: "#96C9F4" },
    { content: "Îãà Î¨¥Îùº~", bgColor: "#3FA2F6" },
    { content: "ÎûúÎç§Í≤åÏûÑ", bgColor: "#0F67B1" },
    { content: "Ìï® Î¥êÏ§ÄÎã§", bgColor: "#96C9F4" },
    { content: "Îã§ Í∞ôÏù¥ ÌïúÏûî", bgColor: "#3FA2F6" },
];

const Board = ({
    currentPosition,
    showToastMessage,
    moveTo,
}: {
    currentPosition: number;
    showToastMessage: (message: string) => void;
    moveTo: (steps: number) => void;
}) => {
    // Implement board logic here

    const [soju, setSoju] = useState(0);
    const [isTraveling, setIsTraveling] = useState(false);
    const onTravel = (step: number) => {
        if (!isTraveling) return;
        moveTo(step);
        setIsTraveling(false);
    };
    useEffect(() => {
        if (currentPosition === 9) {
            setSoju((prev) => prev + 1);
        }

        if (currentPosition === 25) {
            showToastMessage(`${soju}Ïûî Î¨¥Îùº üçª`);
            setSoju(0);
        }
        if (currentPosition === 16) {
            setIsTraveling(true);
        }
    }, [currentPosition]);
    return (
        <BoardContainer>
            <EmptyCell />
            {boardGrid.map((v, i) => (
                <Cell
                    onClick={() => onTravel(v)}
                    isActive={v === currentPosition}
                    key={v}
                    bgColor={cellData[v]?.bgColor}
                >
                    {v === 25 ? cellData[v]?.content + soju + "Ïûî" : cellData[v]?.content}
                </Cell>
            ))}
        </BoardContainer>
    );
};

export default Board;
